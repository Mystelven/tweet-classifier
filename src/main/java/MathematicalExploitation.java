
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.util.ArrayList;

/**
 *
 * This class is a list of mathematical operation to extract information from
 * the array of probability returned by the Classifier.
 *
 * @author Valentin Montmirail (http://valentin-montmirail.com/)
 */
public class MathematicalExploitation {

    private static final String plotFileName = "dataInformation.gp";

    /* The reference to the percentages */
    private Classifier classifier;

    /* The constructor needs a reference to the percentages */
    public MathematicalExploitation(Classifier c) { classifier = c; }

    /* We compute the median of the data (according to when it is strongly negative or strongly positive) */
    public Double median() {

        ArrayList<Double> percentages = classifier.getPositivesPercentages();

        return percentages.get(percentages.size()/2);
    }

    /**
     * This function will return the average value of the data-set
     * @return the average value of the data-set.
     */
    public Double average() {

        ArrayList<Double> percentages = classifier.getPositivesPercentages();

        Double sum = 0.0;
        for(Double per : percentages) {
            sum += per;
        }

        DecimalFormat df = new DecimalFormat("0.000");
        return Double.valueOf(df.format(sum/percentages.size()));
    }

    /**
     * This function will return extremum in the data set.
     * @param negative if true, we return strongest negative, if not, the strongest positive
     * @return the strongest negative, if 'negative' is true, the strongest positive otherwise.
     */
    public Double maximum(boolean negative) {

        ArrayList<Double> percentages = classifier.getPositivesPercentages();

        if(negative) {
            return percentages.get(percentages.size()-1);
        }
        else {
            return percentages.get(0);
        }
    }


    /**
     * We display then, nicely, all the information about those data
     * @return the information about data, nicely displayed.
     */
    public String toString() {

        StringBuilder builder = new StringBuilder();

        builder.append("The strongest negative  : "  + maximum(true) +"\n");
        builder.append("The strongest positive  :  " + maximum(false)+"\n");
        builder.append("The median value        :  " + median()+"\n");
        builder.append("The average value       :  " + average()+"\n");

        return builder.toString();
    }

}
